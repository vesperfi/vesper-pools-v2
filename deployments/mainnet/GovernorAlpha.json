{
  "address": "0x59e06eA66e885580cc1D124775A543B59CAfB3FF",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "governanceToken_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "__abdicate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "__acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "__executeSetTimelockPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "__queueSetTimelockPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "support",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "votes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorAlpha.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governanceToken",
      "outputs": [
        {
          "internalType": "contract GovernanceInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "guardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum GovernorAlpha.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x6366263430a88b3fd757b6a1910f170b8a93a8964c88fda598453f35a28700be",
  "receipt": {
    "to": null,
    "from": "0xdf826ff6518e609E4cEE86299d40611C148099d5",
    "contractAddress": "0x59e06eA66e885580cc1D124775A543B59CAfB3FF",
    "transactionIndex": 55,
    "gasUsed": "2896320",
    "logsBloom": "0x
    "blockHash": "0xad574ec8481594944dfa60497623ef740d87f2cacaf60970a0e287f41cb7903e",
    "transactionHash": "0x6366263430a88b3fd757b6a1910f170b8a93a8964c88fda598453f35a28700be",
    "logs": [],
    "blockNumber": 13284381,
    "cumulativeGasUsed": "7991520",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4279352DdFa6cfBcAF397B8E93E421c012ad478e",
    "0xbA4cFE5741b357FA371b506e5db0774aBFeCf8Fc",
    "0xdf826ff6518e609E4cEE86299d40611C148099d5"
  ],
  "solcInputHash": "21e5c64e9df8a65a9960cac90b2751f6",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"governanceToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"__abdicate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"__acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"__executeSetTimelockPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"__queueSetTimelockPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorAlpha.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceToken\",\"outputs\":[{\"internalType\":\"contract GovernanceInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum GovernorAlpha.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ProposalCanceled(uint256)\":{\"details\":\"An event emitted when a proposal has been canceled\"},\"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)\":{\"details\":\"An event emitted when a new proposal is created\"},\"ProposalExecuted(uint256)\":{\"details\":\"An event emitted when a proposal has been executed in the Timelock\"},\"ProposalQueued(uint256,uint256)\":{\"details\":\"An event emitted when a proposal has been queued in the Timelock\"},\"VoteCast(address,uint256,bool,uint256)\":{\"details\":\"An event emitted when a vote has been cast on a proposal\"}},\"kind\":\"dev\",\"methods\":{\"proposalMaxOperations()\":{\"details\":\"The maximum number of actions that can be included in a proposal\"},\"proposalThreshold()\":{\"details\":\"The number of votes required in order for a voter to become a proposer\"},\"quorumVotes()\":{\"details\":\"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\"},\"votingDelay()\":{\"details\":\"The delay before voting on a proposal may take place, once proposed\"},\"votingPeriod()\":{\"details\":\"The duration of voting on a proposal, in blocks\"}},\"stateVariables\":{\"BALLOT_TYPEHASH\":{\"details\":\"The EIP-712 typehash for the ballot struct used by the contract\"},\"DOMAIN_TYPEHASH\":{\"details\":\"The EIP-712 typehash for the contract's domain\"},\"governanceToken\":{\"details\":\"The address of the Vesper governance token\"},\"guardian\":{\"details\":\"The address of the Governor Guardian\"},\"latestProposalIds\":{\"details\":\"The latest proposal for each proposer\"},\"name\":{\"details\":\"The name of this contract\"},\"proposalCount\":{\"details\":\"The total number of proposals\"},\"proposals\":{\"details\":\"The official record of all proposals ever proposed\"},\"timelock\":{\"details\":\"The address of the Vesper Protocol Timelock\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/governor/GovernorAlpha.sol\":\"GovernorAlpha\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/governor/GovernorAlpha.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\n\\n// From https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/GovernorAlpha.sol\\n\\n// Copyright 2020 Compound Labs, Inc.\\n// Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\\n// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\\n// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\\n// 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\npragma solidity 0.6.12;\\npragma experimental ABIEncoderV2;\\n\\n// solhint-disable\\ncontract GovernorAlpha {\\n    /// @dev The name of this contract\\n    string public constant name = \\\"Vesper Governor Alpha\\\";\\n\\n    /// @dev The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    function quorumVotes() public view returns (uint256) {\\n        return governanceToken.totalSupply() / 25;\\n    } // 4% of Supply\\n\\n    /// @dev The number of votes required in order for a voter to become a proposer\\n    function proposalThreshold() public view returns (uint256) {\\n        return governanceToken.totalSupply() / 100;\\n    } // 1% of Supply\\n\\n    /// @dev The maximum number of actions that can be included in a proposal\\n    function proposalMaxOperations() public pure returns (uint256) {\\n        return 10;\\n    } // 10 actions\\n\\n    /// @dev The delay before voting on a proposal may take place, once proposed\\n    function votingDelay() public pure returns (uint256) {\\n        return 1;\\n    } // 1 block\\n\\n    /// @dev The duration of voting on a proposal, in blocks\\n    function votingPeriod() public pure returns (uint256) {\\n        return 17280;\\n    } // ~3 days in blocks (assuming 15s blocks)\\n\\n    /// @dev The address of the Vesper Protocol Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @dev The address of the Vesper governance token\\n    GovernanceInterface public governanceToken;\\n\\n    /// @dev The address of the Governor Guardian\\n    address public guardian;\\n\\n    /// @dev The total number of proposals\\n    uint256 public proposalCount;\\n\\n    struct Proposal {\\n        // Unique id for looking up a proposal\\n        uint256 id;\\n        // The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint256 eta;\\n        // the ordered list of target addresses for calls to be made\\n        address[] targets;\\n        // The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint256[] values;\\n        // The ordered list of function signatures to be called\\n        string[] signatures;\\n        // The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n        // The block at which voting begins: holders must delegate their votes prior to this block\\n        uint256 startBlock;\\n        // The block at which voting ends: votes must be cast prior to this block\\n        uint256 endBlock;\\n        // Current number of votes in favor of this proposal\\n        uint256 forVotes;\\n        // Current number of votes in opposition to this proposal\\n        uint256 againstVotes;\\n        // Creator of the proposal\\n        address proposer;\\n        // Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        // Flag marking whether the proposal has been executed\\n        bool executed;\\n        // Receipts of ballots for the entire set of voters\\n        mapping(address => Receipt) receipts;\\n    }\\n\\n    /// @dev Ballot receipt record for a voter\\n    struct Receipt {\\n        // Whether or not a vote has been cast\\n        bool hasVoted;\\n        // Whether or not the voter supports the proposal\\n        bool support;\\n        // The number of votes the voter had, which were cast\\n        uint256 votes;\\n    }\\n\\n    /// @dev Possible states that a proposal may be in\\n    enum ProposalState {Pending, Active, Canceled, Defeated, Succeeded, Queued, Expired, Executed}\\n\\n    /// @dev The official record of all proposals ever proposed\\n    mapping(uint256 => Proposal) public proposals;\\n\\n    /// @dev The latest proposal for each proposer\\n    mapping(address => uint256) public latestProposalIds;\\n\\n    /// @dev The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n    /// @dev The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,bool support)\\\");\\n\\n    /// @dev An event emitted when a new proposal is created\\n    event ProposalCreated(\\n        uint256 id,\\n        address proposer,\\n        address[] targets,\\n        uint256[] values,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint256 startBlock,\\n        uint256 endBlock,\\n        string description\\n    );\\n\\n    /// @dev An event emitted when a vote has been cast on a proposal\\n    event VoteCast(address voter, uint256 proposalId, bool support, uint256 votes);\\n\\n    /// @dev An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint256 id);\\n\\n    /// @dev An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint256 id, uint256 eta);\\n\\n    /// @dev An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint256 id);\\n\\n    constructor(\\n        address timelock_,\\n        address governanceToken_,\\n        address guardian_\\n    ) public {\\n        timelock = TimelockInterface(timelock_);\\n        governanceToken = GovernanceInterface(governanceToken_);\\n        guardian = guardian_;\\n    }\\n\\n    function propose(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) external returns (uint256) {\\n        require(\\n            governanceToken.getPriorVotes(msg.sender, sub256(block.number, 1)) >\\n                proposalThreshold(),\\n            \\\"GovernorAlpha::propose: proposer votes below proposal threshold\\\"\\n        );\\n        require(\\n            targets.length == values.length &&\\n                targets.length == signatures.length &&\\n                targets.length == calldatas.length,\\n            \\\"GovernorAlpha::propose: proposal function information arity mismatch\\\"\\n        );\\n        require(targets.length != 0, \\\"GovernorAlpha::propose: must provide actions\\\");\\n        require(\\n            targets.length <= proposalMaxOperations(),\\n            \\\"GovernorAlpha::propose: too many actions\\\"\\n        );\\n\\n        uint256 latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n            ProposalState proposersLatestProposalState = state(latestProposalId);\\n            require(\\n                proposersLatestProposalState != ProposalState.Active,\\n                \\\"GovernorAlpha::propose: one live proposal per proposer, found an already active proposal\\\"\\n            );\\n            require(\\n                proposersLatestProposalState != ProposalState.Pending,\\n                \\\"GovernorAlpha::propose: one live proposal per proposer, found an already pending proposal\\\"\\n            );\\n        }\\n\\n        uint256 startBlock = add256(block.number, votingDelay());\\n        uint256 endBlock = add256(startBlock, votingPeriod());\\n\\n        proposalCount++;\\n        Proposal memory newProposal =\\n            Proposal({\\n                id: proposalCount,\\n                proposer: msg.sender,\\n                eta: 0,\\n                targets: targets,\\n                values: values,\\n                signatures: signatures,\\n                calldatas: calldatas,\\n                startBlock: startBlock,\\n                endBlock: endBlock,\\n                forVotes: 0,\\n                againstVotes: 0,\\n                canceled: false,\\n                executed: false\\n            });\\n\\n        proposals[newProposal.id] = newProposal;\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(\\n            newProposal.id,\\n            msg.sender,\\n            targets,\\n            values,\\n            signatures,\\n            calldatas,\\n            startBlock,\\n            endBlock,\\n            description\\n        );\\n        return newProposal.id;\\n    }\\n\\n    function queue(uint256 proposalId) external {\\n        require(\\n            state(proposalId) == ProposalState.Succeeded,\\n            \\\"GovernorAlpha::queue: proposal can only be queued if it is succeeded\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        uint256 eta = add256(block.timestamp, timelock.delay());\\n        uint256 length = proposal.targets.length;\\n        for (uint256 i = 0; i < length; i++) {\\n            _queueOrRevert(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                eta\\n            );\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function _queueOrRevert(\\n        address target,\\n        uint256 value,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 eta\\n    ) internal {\\n        require(\\n            !timelock.queuedTransactions(\\n                keccak256(abi.encode(target, value, signature, data, eta))\\n            ),\\n            \\\"GovernorAlpha::_queueOrRevert: proposal action already queued at eta\\\"\\n        );\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    function execute(uint256 proposalId) external payable {\\n        require(\\n            state(proposalId) == ProposalState.Queued,\\n            \\\"GovernorAlpha::execute: proposal can only be executed if it is queued\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        uint256 length = proposal.targets.length;\\n        for (uint256 i = 0; i < length; i++) {\\n            timelock.executeTransaction{value: proposal.values[i]}(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    function cancel(uint256 proposalId) external {\\n        require(\\n            state(proposalId) != ProposalState.Executed,\\n            \\\"GovernorAlpha::cancel: cannot cancel executed proposal\\\"\\n        );\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(\\n            msg.sender == guardian ||\\n                governanceToken.getPriorVotes(proposal.proposer, sub256(block.number, 1)) <\\n                proposalThreshold(),\\n            \\\"GovernorAlpha::cancel: proposer above threshold\\\"\\n        );\\n\\n        proposal.canceled = true;\\n        uint256 length = proposal.targets.length;\\n        for (uint256 i = 0; i < length; i++) {\\n            timelock.cancelTransaction(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    function getActions(uint256 proposalId)\\n        external\\n        view\\n        returns (\\n            address[] memory targets,\\n            uint256[] memory values,\\n            string[] memory signatures,\\n            bytes[] memory calldatas\\n        )\\n    {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    function getReceipt(uint256 proposalId, address voter) external view returns (Receipt memory) {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    function state(uint256 proposalId) public view returns (ProposalState) {\\n        require(\\n            proposalCount >= proposalId && proposalId != 0,\\n            \\\"GovernorAlpha::state: invalid proposal id\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (\\n            proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes()\\n        ) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    function castVote(uint256 proposalId, bool support) external {\\n        return _castVote(msg.sender, proposalId, support);\\n    }\\n\\n    function castVoteBySig(\\n        uint256 proposalId,\\n        bool support,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        bytes32 domainSeparator =\\n            keccak256(\\n                abi.encode(DOMAIN_TYPEHASH, keccak256(bytes(name)), getChainId(), address(this))\\n            );\\n        bytes32 structHash = keccak256(abi.encode(BALLOT_TYPEHASH, proposalId, support));\\n        bytes32 digest = keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(signatory != address(0), \\\"GovernorAlpha::castVoteBySig: invalid signature\\\");\\n        return _castVote(signatory, proposalId, support);\\n    }\\n\\n    function _castVote(\\n        address voter,\\n        uint256 proposalId,\\n        bool support\\n    ) internal {\\n        require(\\n            state(proposalId) == ProposalState.Active,\\n            \\\"GovernorAlpha::_castVote: voting is closed\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(!receipt.hasVoted, \\\"GovernorAlpha::_castVote: voter already voted\\\");\\n        uint256 votes = governanceToken.getPriorVotes(voter, proposal.startBlock);\\n\\n        if (support) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        emit VoteCast(voter, proposalId, support, votes);\\n    }\\n\\n    function __acceptAdmin() external {\\n        require(\\n            msg.sender == guardian,\\n            \\\"GovernorAlpha::__acceptAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.acceptAdmin();\\n    }\\n\\n    function __abdicate() external {\\n        require(msg.sender == guardian, \\\"GovernorAlpha::__abdicate: sender must be gov guardian\\\");\\n        guardian = address(0);\\n    }\\n\\n    function __queueSetTimelockPendingAdmin(address newPendingAdmin, uint256 eta) external {\\n        require(\\n            msg.sender == guardian,\\n            \\\"GovernorAlpha::__queueSetTimelockPendingAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.queueTransaction(\\n            address(timelock),\\n            0,\\n            \\\"setPendingAdmin(address)\\\",\\n            abi.encode(newPendingAdmin),\\n            eta\\n        );\\n    }\\n\\n    function __executeSetTimelockPendingAdmin(address newPendingAdmin, uint256 eta) external {\\n        require(\\n            msg.sender == guardian,\\n            \\\"GovernorAlpha::__executeSetTimelockPendingAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.executeTransaction(\\n            address(timelock),\\n            0,\\n            \\\"setPendingAdmin(address)\\\",\\n            abi.encode(newPendingAdmin),\\n            eta\\n        );\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainId() internal pure returns (uint256 chainId) {\\n        assembly {\\n            chainId := chainid()\\n        }\\n    }\\n}\\n\\ninterface TimelockInterface {\\n    function delay() external view returns (uint256);\\n\\n    function GRACE_PERIOD() external view returns (uint256);\\n\\n    function acceptAdmin() external;\\n\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n\\n    function queueTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external returns (bytes32);\\n\\n    function cancelTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external;\\n\\n    function executeTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external payable returns (bytes memory);\\n}\\n\\ninterface GovernanceInterface {\\n    function getPriorVotes(address account, uint256 blockNumber) external view returns (uint256);\\n\\n    function totalSupply() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x5df366239e281650a8b74d258e5d2b7635f51ec83233d93ad80b14056596e910\",\"license\":\"BSD-3-Clause\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200331838038062003318833981016040819052620000349162000077565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055620000e3565b6000806000606084860312156200008c578283fd5b83516200009981620000ca565b6020850151909350620000ac81620000ca565b6040850151909250620000bf81620000ca565b809150509250925092565b6001600160a01b0381168114620000e057600080fd5b50565b61322580620000f36000396000f3fe60806040526004361061019c5760003560e01c80634634c61f116100ec578063da35c6641161008a578063deaaa7cc11610064578063deaaa7cc14610461578063e23a9a5214610476578063f96dae0a146104a3578063fe0d94c1146104b85761019c565b8063da35c6641461040c578063da95691a14610421578063ddf0b009146104415761019c565b806391500671116100c657806391500671146103ad578063b58131b0146103cd578063b9a61961146103e2578063d33219b4146103f75761019c565b80634634c61f14610363578063760fbc13146103835780637bdbe4d0146103985761019c565b806321f43e42116101595780633932abb1116101335780633932abb1146102df5780633e4f49e6146102f457806340e58ee514610321578063452a9320146103415761019c565b806321f43e421461027a57806324bc1a641461029a578063328dd982146102af5761019c565b8063013cf08b146101a157806302a251a3146101df57806306fdde031461020157806315373e3d1461022357806317977c611461024557806320606b7014610265575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004612444565b6104cb565b6040516101d6999897969594939291906130f2565b60405180910390f35b3480156101eb57600080fd5b506101f4610527565b6040516101d6919061283a565b34801561020d57600080fd5b5061021661052d565b6040516101d691906128b1565b34801561022f57600080fd5b5061024361023e366004612488565b61055e565b005b34801561025157600080fd5b506101f461026036600461228c565b61056d565b34801561027157600080fd5b506101f461057f565b34801561028657600080fd5b506102436102953660046122a7565b6105a3565b3480156102a657600080fd5b506101f461068a565b3480156102bb57600080fd5b506102cf6102ca366004612444565b610721565b6040516101d694939291906127e2565b3480156102eb57600080fd5b506101f46109b0565b34801561030057600080fd5b5061031461030f366004612444565b6109b5565b6040516101d6919061289d565b34801561032d57600080fd5b5061024361033c366004612444565b610b47565b34801561034d57600080fd5b50610356610daa565b6040516101d6919061269c565b34801561036f57600080fd5b5061024361037e3660046124b7565b610db9565b34801561038f57600080fd5b50610243610f6a565b3480156103a457600080fd5b506101f4610fa6565b3480156103b957600080fd5b506102436103c83660046122a7565b610fab565b3480156103d957600080fd5b506101f4611080565b3480156103ee57600080fd5b506102436110d2565b34801561040357600080fd5b50610356611157565b34801561041857600080fd5b506101f4611166565b34801561042d57600080fd5b506101f461043c3660046122d1565b61116c565b34801561044d57600080fd5b5061024361045c366004612444565b61156b565b34801561046d57600080fd5b506101f46117e5565b34801561048257600080fd5b5061049661049136600461245c565b611809565b6040516101d69190613027565b3480156104af57600080fd5b5061035661186d565b6102436104c6366004612444565b61187c565b6004602052600090815260409020805460018201546006830154600784015460088501546009860154600a9096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b61438090565b6040518060400160405280601581526020017456657370657220476f7665726e6f7220416c70686160581b81525081565b610569338383611a3b565b5050565b60056020526000908152604090205481565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6002546001600160a01b031633146105d65760405162461bcd60e51b81526004016105cd906129f6565b60405180910390fd5b600080546040516001600160a01b0390911691630825f38f9183919061060090879060200161269c565b604051602081830303815290604052856040518563ffffffff1660e01b815260040161062f94939291906126c9565b600060405180830381600087803b15801561064957600080fd5b505af115801561065d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261068591908101906123d1565b505050565b60006019600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106dc57600080fd5b505afa1580156106f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071491906123b9565b8161071b57fe5b04905090565b606080606080600060046000878152602001908152602001600020905080600201816003018260040183600501838054806020026020016040519081016040528092919081815260200182805480156107a357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610785575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156107f557602002820191906000526020600020905b8154815260200190600101908083116107e1575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b828210156108c85760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156108b45780601f10610889576101008083540402835291602001916108b4565b820191906000526020600020905b81548152906001019060200180831161089757829003601f168201915b50505050508152602001906001019061081d565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101561099a5760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156109865780601f1061095b57610100808354040283529160200191610986565b820191906000526020600020905b81548152906001019060200180831161096957829003601f168201915b5050505050815260200190600101906108ef565b5050505090509450945094509450509193509193565b600190565b600081600354101580156109c857508115155b6109e45760405162461bcd60e51b81526004016105cd90612a68565b6000828152600460205260409020600a810154600160a01b900460ff1615610a10576002915050610b42565b80600601544311610a25576000915050610b42565b80600701544311610a3a576001915050610b42565b80600901548160080154111580610a5b5750610a5461068a565b8160080154105b15610a6a576003915050610b42565b6001810154610a7d576004915050610b42565b600a810154600160a81b900460ff1615610a9b576007915050610b42565b610b2c816001015460008054906101000a90046001600160a01b03166001600160a01b031663c1a287e26040518163ffffffff1660e01b815260040160206040518083038186803b158015610aef57600080fd5b505afa158015610b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2791906123b9565b611bd7565b4210610b3c576006915050610b42565b60059150505b919050565b6007610b52826109b5565b6007811115610b5d57fe5b1415610b7b5760405162461bcd60e51b81526004016105cd90612f02565b60008181526004602052604090206002546001600160a01b0316331480610c3e5750610ba5611080565b60018054600a8401546001600160a01b039182169263782d6fe19290911690610bcf904390611c03565b6040518363ffffffff1660e01b8152600401610bec9291906126b0565b60206040518083038186803b158015610c0457600080fd5b505afa158015610c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3c91906123b9565b105b610c5a5760405162461bcd60e51b81526004016105cd90612cce565b600a8101805460ff60a01b1916600160a01b179055600281015460005b81811015610d6d576000546002840180546001600160a01b039092169163591fcdfe919084908110610ca557fe5b6000918252602090912001546003860180546001600160a01b039092169185908110610ccd57fe5b9060005260206000200154866004018581548110610ce757fe5b90600052602060002001876005018681548110610d0057fe5b9060005260206000200188600101546040518663ffffffff1660e01b8152600401610d2f9594939291906127a9565b600060405180830381600087803b158015610d4957600080fd5b505af1158015610d5d573d6000803e3d6000fd5b505060019092019150610c779050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c83604051610d9d919061283a565b60405180910390a1505050565b6002546001600160a01b031681565b60408051808201909152601581527456657370657220476f7665726e6f7220416c70686160581b60209091015260007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8667fe7a4e5509f00ad12672e7bd3276df306b68741a6fb9b588c2aee841a75e05db8610e32611c2b565b30604051602001610e469493929190612843565b60405160208183030381529060405280519060200120905060007f8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee8787604051602001610e9593929190612867565b60405160208183030381529060405280519060200120905060008282604051602001610ec2929190612681565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610eff949392919061287f565b6020604051602081039080840390855afa158015610f21573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f545760405162461bcd60e51b81526004016105cd90612e30565b610f5f818a8a611a3b565b505050505050505050565b6002546001600160a01b03163314610f945760405162461bcd60e51b81526004016105cd90612fd1565b600280546001600160a01b0319169055565b600a90565b6002546001600160a01b03163314610fd55760405162461bcd60e51b81526004016105cd90612b81565b600080546040516001600160a01b0390911691633a66f90191839190610fff90879060200161269c565b604051602081830303815290604052856040518563ffffffff1660e01b815260040161102e94939291906126c9565b602060405180830381600087803b15801561104857600080fd5b505af115801561105c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068591906123b9565b60006064600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106dc57600080fd5b6002546001600160a01b031633146110fc5760405162461bcd60e51b81526004016105cd906128c4565b6000805460408051630e18b68160e01b815290516001600160a01b0390921692630e18b6819260048084019382900301818387803b15801561113d57600080fd5b505af1158015611151573d6000803e3d6000fd5b50505050565b6000546001600160a01b031681565b60035481565b6000611176611080565b600180546001600160a01b03169063782d6fe1903390611197904390611c03565b6040518363ffffffff1660e01b81526004016111b49291906126b0565b60206040518083038186803b1580156111cc57600080fd5b505afa1580156111e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120491906123b9565b116112215760405162461bcd60e51b81526004016105cd90612dd3565b84518651148015611233575083518651145b8015611240575082518651145b61125c5760405162461bcd60e51b81526004016105cd90612c64565b855161127a5760405162461bcd60e51b81526004016105cd90612d87565b611282610fa6565b865111156112a25760405162461bcd60e51b81526004016105cd90612bf1565b33600090815260056020526040902054801561131f5760006112c3826109b5565b905060018160078111156112d357fe5b14156112f15760405162461bcd60e51b81526004016105cd90612e7f565b60008160078111156112ff57fe5b141561131d5760405162461bcd60e51b81526004016105cd90612afe565b505b600061132d43610b276109b0565b9050600061133d82610b27610527565b6003805460010190559050611350611d8e565b50604080516101a081018252600354808252600060208084018281528486018f8152606086018f9052608086018e905260a086018d905260c0860189905260e0860188905261010086018490526101208601849052336101408701526101608601849052610180860184905293835260048252949091208351815593516001850155905180519293849390926113ed926002850192910190611e03565b5060608201518051611409916003840191602090910190611e68565b5060808201518051611425916004840191602090910190611eaf565b5060a08201518051611441916005840191602090910190611f08565b5060c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a0160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061016082015181600a0160146101000a81548160ff02191690831515021790555061018082015181600a0160156101000a81548160ff0219169083151502179055509050508060000151600560008361014001516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e6040516115559998979695949392919061304c565b60405180910390a1519998505050505050505050565b6004611576826109b5565b600781111561158157fe5b1461159e5760405162461bcd60e51b81526004016105cd90612921565b600081815260046020818152604080842084548251630d48571f60e31b815292519195946115f39442946001600160a01b0390931693636a42b8f8938084019390829003018186803b158015610aef57600080fd5b600283015490915060005b8181101561179d5761179584600201828154811061161857fe5b6000918252602090912001546003860180546001600160a01b03909216918490811061164057fe5b906000526020600020015486600401848154811061165a57fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156116e85780601f106116bd576101008083540402835291602001916116e8565b820191906000526020600020905b8154815290600101906020018083116116cb57829003601f168201915b50505050508760050185815481106116fc57fe5b600091825260209182902001805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561178a5780601f1061175f5761010080835404028352916020019161178a565b820191906000526020600020905b81548152906001019060200180831161176d57829003601f168201915b505050505087611c2f565b6001016115fe565b50600183018290556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda2892906117d790869085906130e4565b60405180910390a150505050565b7f8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee81565b611811611f61565b5060008281526004602090815260408083206001600160a01b0385168452600b018252918290208251606081018452815460ff808216151583526101009091041615159281019290925260010154918101919091525b92915050565b6001546001600160a01b031681565b6005611887826109b5565b600781111561189257fe5b146118af5760405162461bcd60e51b81526004016105cd9061298b565b6000818152600460205260408120600a8101805460ff60a81b1916600160a81b179055600281015490915b81811015611a0b576000546003840180546001600160a01b0390921691630825f38f91908490811061190857fe5b906000526020600020015485600201848154811061192257fe5b6000918252602090912001546003870180546001600160a01b03909216918690811061194a57fe5b906000526020600020015487600401868154811061196457fe5b9060005260206000200188600501878154811061197d57fe5b9060005260206000200189600101546040518763ffffffff1660e01b81526004016119ac9594939291906127a9565b6000604051808303818588803b1580156119c557600080fd5b505af11580156119d9573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052611a0291908101906123d1565b506001016118da565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f83604051610d9d919061283a565b6001611a46836109b5565b6007811115611a5157fe5b14611a6e5760405162461bcd60e51b81526004016105cd90612f58565b60008281526004602090815260408083206001600160a01b0387168452600b8101909252909120805460ff1615611ab75760405162461bcd60e51b81526004016105cd90612ab1565b600154600683015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe191611aed918a916004016126b0565b60206040518083038186803b158015611b0557600080fd5b505afa158015611b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3d91906123b9565b90508315611b5d57611b53836008015482611bd7565b6008840155611b71565b611b6b836009015482611bd7565b60098401555b8154600160ff19909116811761ff0019166101008615150217835582018190556040517f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c4690611bc7908890889088908690612735565b60405180910390a1505050505050565b600082820183811015611bfc5760405162461bcd60e51b81526004016105cd90612c39565b9392505050565b600082821115611c255760405162461bcd60e51b81526004016105cd90612fa2565b50900390565b4690565b6000546040516001600160a01b039091169063f2b0653790611c5d908890889088908890889060200161275d565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611c8f919061283a565b60206040518083038186803b158015611ca757600080fd5b505afa158015611cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cdf919061239d565b15611cfc5760405162461bcd60e51b81526004016105cd90612d1d565b600054604051633a66f90160e01b81526001600160a01b0390911690633a66f90190611d34908890889088908890889060040161275d565b602060405180830381600087803b158015611d4e57600080fd5b505af1158015611d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d8691906123b9565b505050505050565b604051806101a001604052806000815260200160008152602001606081526020016060815260200160608152602001606081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016000151581526020016000151581525090565b828054828255906000526020600020908101928215611e58579160200282015b82811115611e5857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611e23565b50611e64929150611f81565b5090565b828054828255906000526020600020908101928215611ea3579160200282015b82811115611ea3578251825591602001919060010190611e88565b50611e64929150611fa0565b828054828255906000526020600020908101928215611efc579160200282015b82811115611efc5782518051611eec918491602090910190611fb5565b5091602001919060010190611ecf565b50611e64929150612022565b828054828255906000526020600020908101928215611f55579160200282015b82811115611f555782518051611f45918491602090910190611fb5565b5091602001919060010190611f28565b50611e6492915061203f565b604080516060810182526000808252602082018190529181019190915290565b5b80821115611e645780546001600160a01b0319168155600101611f82565b5b80821115611e645760008155600101611fa1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ff657805160ff1916838001178555611ea3565b82800160010185558215611ea35791820182811115611ea3578251825591602001919060010190611e88565b80821115611e64576000612036828261205c565b50600101612022565b80821115611e64576000612053828261205c565b5060010161203f565b50805460018160011615610100020316600290046000825580601f1061208257506120a0565b601f0160209004906000526020600020908101906120a09190611fa0565b50565b80356001600160a01b038116811461186757600080fd5b600082601f8301126120ca578081fd5b81356120dd6120d882613165565b61313e565b8181529150602080830190848101818402860182018710156120fe57600080fd5b60005b848110156121255761211388836120a3565b84529282019290820190600101612101565b505050505092915050565b600082601f830112612140578081fd5b813561214e6120d882613165565b818152915060208083019084810160005b8481101561212557612176888484358a010161223e565b8452928201929082019060010161215f565b600082601f830112612198578081fd5b81356121a66120d882613165565b818152915060208083019084810160005b84811015612125576121ce888484358a010161223e565b845292820192908201906001016121b7565b600082601f8301126121f0578081fd5b81356121fe6120d882613165565b81815291506020808301908481018184028601820187101561221f57600080fd5b60005b8481101561212557813584529282019290820190600101612222565b600082601f83011261224e578081fd5b813561225c6120d882613185565b915080825283602082850101111561227357600080fd5b8060208401602084013760009082016020015292915050565b60006020828403121561229d578081fd5b611bfc83836120a3565b600080604083850312156122b9578081fd5b6122c384846120a3565b946020939093013593505050565b600080600080600060a086880312156122e8578081fd5b853567ffffffffffffffff808211156122ff578283fd5b61230b89838a016120ba565b96506020880135915080821115612320578283fd5b61232c89838a016121e0565b95506040880135915080821115612341578283fd5b61234d89838a01612188565b94506060880135915080821115612362578283fd5b61236e89838a01612130565b93506080880135915080821115612383578283fd5b506123908882890161223e565b9150509295509295909350565b6000602082840312156123ae578081fd5b8151611bfc816131e1565b6000602082840312156123ca578081fd5b5051919050565b6000602082840312156123e2578081fd5b815167ffffffffffffffff8111156123f8578182fd5b8201601f81018413612408578182fd5b80516124166120d882613185565b81815285602083850101111561242a578384fd5b61243b8260208301602086016131b5565b95945050505050565b600060208284031215612455578081fd5b5035919050565b6000806040838503121561246e578182fd5b8235915061247f84602085016120a3565b90509250929050565b6000806040838503121561249a578182fd5b8235915060208301356124ac816131e1565b809150509250929050565b600080600080600060a086880312156124ce578283fd5b8535945060208601356124e0816131e1565b9350604086013560ff811681146124f5578384fd5b94979396509394606081013594506080013592915050565b6000815180845260208085019450808401835b838110156125455781516001600160a01b031687529582019590820190600101612520565b509495945050505050565b6000815180845260208085018081965082840281019150828601855b858110156125965782840389526125848483516125d2565b9885019893509084019060010161256c565b5091979650505050505050565b6000815180845260208085019450808401835b83811015612545578151875295820195908201906001016125b6565b600081518084526125ea8160208601602086016131b5565b601f01601f19169290920160200192915050565b6000815460018082166000811461261c576001811461263a57612678565b60028304607f16865260ff1983166020870152604086019350612678565b6002830480875261264a866131a9565b60005b8281101561266e5781546020828b010152848201915060208101905061264d565b8801602001955050505b50505092915050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038616825284602083015260a06040830152601860a08301527f73657450656e64696e6741646d696e286164647265737329000000000000000060c083015260e0606083015261272460e08301856125d2565b905082608083015295945050505050565b6001600160a01b03949094168452602084019290925215156040830152606082015260800190565b600060018060a01b038716825285602083015260a0604083015261278460a08301866125d2565b828103606084015261279681866125d2565b9150508260808301529695505050505050565b600060018060a01b038716825285602083015260a060408301526127d060a08301866125fe565b828103606084015261279681866125fe565b6000608082526127f5608083018761250d565b828103602084015261280781876125a3565b9050828103604084015261281b8186612550565b9050828103606084015261282f8185612550565b979650505050505050565b90815260200190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b92835260208301919091521515604082015260600190565b93845260ff9290921660208401526040830152606082015260800190565b60208101600883106128ab57fe5b91905290565b600060208252611bfc60208301846125d2565b60208082526039908201527f476f7665726e6f72416c7068613a3a5f5f61636365707441646d696e3a20736560408201527f6e646572206d75737420626520676f7620677561726469616e00000000000000606082015260800190565b60208082526044908201527f476f7665726e6f72416c7068613a3a71756575653a2070726f706f73616c206360408201527f616e206f6e6c79206265207175657565642069662069742069732073756363656060820152631959195960e21b608082015260a00190565b60208082526045908201527f476f7665726e6f72416c7068613a3a657865637574653a2070726f706f73616c60408201527f2063616e206f6e6c7920626520657865637574656420696620697420697320716060820152641d595d595960da1b608082015260a00190565b6020808252604c908201527f476f7665726e6f72416c7068613a3a5f5f6578656375746553657454696d656c60408201527f6f636b50656e64696e6741646d696e3a2073656e646572206d7573742062652060608201526b33b7bb1033bab0b93234b0b760a11b608082015260a00190565b60208082526029908201527f476f7665726e6f72416c7068613a3a73746174653a20696e76616c69642070726040820152681bdc1bdcd85b081a5960ba1b606082015260800190565b6020808252602d908201527f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f7465722060408201526c185b1c9958591e481d9bdd1959609a1b606082015260800190565b60208082526059908201527f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766560408201527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60608201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000608082015260a00190565b6020808252604a908201527f476f7665726e6f72416c7068613a3a5f5f717565756553657454696d656c6f6360408201527f6b50656e64696e6741646d696e3a2073656e646572206d75737420626520676f6060820152693b1033bab0b93234b0b760b11b608082015260a00190565b60208082526028908201527f476f7665726e6f72416c7068613a3a70726f706f73653a20746f6f206d616e7960408201526720616374696f6e7360c01b606082015260800190565b6020808252601190820152706164646974696f6e206f766572666c6f7760781b604082015260600190565b60208082526044908201527f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73616c60408201527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d6060820152630c2e8c6d60e31b608082015260a00190565b6020808252602f908201527f476f7665726e6f72416c7068613a3a63616e63656c3a2070726f706f7365722060408201526e18589bdd99481d1a1c995cda1bdb19608a1b606082015260800190565b60208082526044908201527f476f7665726e6f72416c7068613a3a5f71756575654f725265766572743a207060408201527f726f706f73616c20616374696f6e20616c7265616479207175657565642061746060820152632065746160e01b608082015260a00190565b6020808252602c908201527f476f7665726e6f72416c7068613a3a70726f706f73653a206d7573742070726f60408201526b7669646520616374696f6e7360a01b606082015260800190565b6020808252603f908201527f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73657260408201527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c6400606082015260800190565b6020808252602f908201527f476f7665726e6f72416c7068613a3a63617374566f746542795369673a20696e60408201526e76616c6964207369676e617475726560881b606082015260800190565b60208082526058908201527f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766560408201527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60608201527f20616c7265616479206163746976652070726f706f73616c0000000000000000608082015260a00190565b60208082526036908201527f476f7665726e6f72416c7068613a3a63616e63656c3a2063616e6e6f742063616040820152751b98d95b08195e1958dd5d1959081c1c9bdc1bdcd85b60521b606082015260800190565b6020808252602a908201527f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f74696e67604082015269081a5cc818db1bdcd95960b21b606082015260800190565b6020808252601590820152747375627472616374696f6e20756e646572666c6f7760581b604082015260600190565b60208082526036908201527f476f7665726e6f72416c7068613a3a5f5f61626469636174653a2073656e6465604082015275391036bab9ba1031329033b7bb1033bab0b93234b0b760511b606082015260800190565b8151151581526020808301511515908201526040918201519181019190915260600190565b8981526001600160a01b0389166020820152610120604082018190526000906130778382018b61250d565b9050828103606084015261308b818a6125a3565b9050828103608084015261309f8189612550565b905082810360a08401526130b38188612550565b90508560c08401528460e08401528281036101008401526130d481856125d2565b9c9b505050505050505050505050565b918252602082015260400190565b988952602089019790975260408801959095526060870193909352608086019190915260a08501526001600160a01b031660c0840152151560e083015215156101008201526101200190565b60405181810167ffffffffffffffff8111828210171561315d57600080fd5b604052919050565b600067ffffffffffffffff82111561317b578081fd5b5060209081020190565b600067ffffffffffffffff82111561319b578081fd5b50601f01601f191660200190565b60009081526020902090565b60005b838110156131d05781810151838201526020016131b8565b838111156111515750506000910152565b80151581146120a057600080fdfea2646970667358221220b228425a5e686d03baf0dfa1d47ac3ae63f350c7388b6076783961ca4163f62564736f6c634300060c0033",
  "deployedBytecode": "0x60806040526004361061019c5760003560e01c80634634c61f116100ec578063da35c6641161008a578063deaaa7cc11610064578063deaaa7cc14610461578063e23a9a5214610476578063f96dae0a146104a3578063fe0d94c1146104b85761019c565b8063da35c6641461040c578063da95691a14610421578063ddf0b009146104415761019c565b806391500671116100c657806391500671146103ad578063b58131b0146103cd578063b9a61961146103e2578063d33219b4146103f75761019c565b80634634c61f14610363578063760fbc13146103835780637bdbe4d0146103985761019c565b806321f43e42116101595780633932abb1116101335780633932abb1146102df5780633e4f49e6146102f457806340e58ee514610321578063452a9320146103415761019c565b806321f43e421461027a57806324bc1a641461029a578063328dd982146102af5761019c565b8063013cf08b146101a157806302a251a3146101df57806306fdde031461020157806315373e3d1461022357806317977c611461024557806320606b7014610265575b600080fd5b3480156101ad57600080fd5b506101c16101bc366004612444565b6104cb565b6040516101d6999897969594939291906130f2565b60405180910390f35b3480156101eb57600080fd5b506101f4610527565b6040516101d6919061283a565b34801561020d57600080fd5b5061021661052d565b6040516101d691906128b1565b34801561022f57600080fd5b5061024361023e366004612488565b61055e565b005b34801561025157600080fd5b506101f461026036600461228c565b61056d565b34801561027157600080fd5b506101f461057f565b34801561028657600080fd5b506102436102953660046122a7565b6105a3565b3480156102a657600080fd5b506101f461068a565b3480156102bb57600080fd5b506102cf6102ca366004612444565b610721565b6040516101d694939291906127e2565b3480156102eb57600080fd5b506101f46109b0565b34801561030057600080fd5b5061031461030f366004612444565b6109b5565b6040516101d6919061289d565b34801561032d57600080fd5b5061024361033c366004612444565b610b47565b34801561034d57600080fd5b50610356610daa565b6040516101d6919061269c565b34801561036f57600080fd5b5061024361037e3660046124b7565b610db9565b34801561038f57600080fd5b50610243610f6a565b3480156103a457600080fd5b506101f4610fa6565b3480156103b957600080fd5b506102436103c83660046122a7565b610fab565b3480156103d957600080fd5b506101f4611080565b3480156103ee57600080fd5b506102436110d2565b34801561040357600080fd5b50610356611157565b34801561041857600080fd5b506101f4611166565b34801561042d57600080fd5b506101f461043c3660046122d1565b61116c565b34801561044d57600080fd5b5061024361045c366004612444565b61156b565b34801561046d57600080fd5b506101f46117e5565b34801561048257600080fd5b5061049661049136600461245c565b611809565b6040516101d69190613027565b3480156104af57600080fd5b5061035661186d565b6102436104c6366004612444565b61187c565b6004602052600090815260409020805460018201546006830154600784015460088501546009860154600a9096015494959394929391929091906001600160a01b0381169060ff600160a01b8204811691600160a81b90041689565b61438090565b6040518060400160405280601581526020017456657370657220476f7665726e6f7220416c70686160581b81525081565b610569338383611a3b565b5050565b60056020526000908152604090205481565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6002546001600160a01b031633146105d65760405162461bcd60e51b81526004016105cd906129f6565b60405180910390fd5b600080546040516001600160a01b0390911691630825f38f9183919061060090879060200161269c565b604051602081830303815290604052856040518563ffffffff1660e01b815260040161062f94939291906126c9565b600060405180830381600087803b15801561064957600080fd5b505af115801561065d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261068591908101906123d1565b505050565b60006019600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106dc57600080fd5b505afa1580156106f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071491906123b9565b8161071b57fe5b04905090565b606080606080600060046000878152602001908152602001600020905080600201816003018260040183600501838054806020026020016040519081016040528092919081815260200182805480156107a357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610785575b50505050509350828054806020026020016040519081016040528092919081815260200182805480156107f557602002820191906000526020600020905b8154815260200190600101908083116107e1575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b828210156108c85760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156108b45780601f10610889576101008083540402835291602001916108b4565b820191906000526020600020905b81548152906001019060200180831161089757829003601f168201915b50505050508152602001906001019061081d565b50505050915080805480602002602001604051908101604052809291908181526020016000905b8282101561099a5760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156109865780601f1061095b57610100808354040283529160200191610986565b820191906000526020600020905b81548152906001019060200180831161096957829003601f168201915b5050505050815260200190600101906108ef565b5050505090509450945094509450509193509193565b600190565b600081600354101580156109c857508115155b6109e45760405162461bcd60e51b81526004016105cd90612a68565b6000828152600460205260409020600a810154600160a01b900460ff1615610a10576002915050610b42565b80600601544311610a25576000915050610b42565b80600701544311610a3a576001915050610b42565b80600901548160080154111580610a5b5750610a5461068a565b8160080154105b15610a6a576003915050610b42565b6001810154610a7d576004915050610b42565b600a810154600160a81b900460ff1615610a9b576007915050610b42565b610b2c816001015460008054906101000a90046001600160a01b03166001600160a01b031663c1a287e26040518163ffffffff1660e01b815260040160206040518083038186803b158015610aef57600080fd5b505afa158015610b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2791906123b9565b611bd7565b4210610b3c576006915050610b42565b60059150505b919050565b6007610b52826109b5565b6007811115610b5d57fe5b1415610b7b5760405162461bcd60e51b81526004016105cd90612f02565b60008181526004602052604090206002546001600160a01b0316331480610c3e5750610ba5611080565b60018054600a8401546001600160a01b039182169263782d6fe19290911690610bcf904390611c03565b6040518363ffffffff1660e01b8152600401610bec9291906126b0565b60206040518083038186803b158015610c0457600080fd5b505afa158015610c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3c91906123b9565b105b610c5a5760405162461bcd60e51b81526004016105cd90612cce565b600a8101805460ff60a01b1916600160a01b179055600281015460005b81811015610d6d576000546002840180546001600160a01b039092169163591fcdfe919084908110610ca557fe5b6000918252602090912001546003860180546001600160a01b039092169185908110610ccd57fe5b9060005260206000200154866004018581548110610ce757fe5b90600052602060002001876005018681548110610d0057fe5b9060005260206000200188600101546040518663ffffffff1660e01b8152600401610d2f9594939291906127a9565b600060405180830381600087803b158015610d4957600080fd5b505af1158015610d5d573d6000803e3d6000fd5b505060019092019150610c779050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c83604051610d9d919061283a565b60405180910390a1505050565b6002546001600160a01b031681565b60408051808201909152601581527456657370657220476f7665726e6f7220416c70686160581b60209091015260007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8667fe7a4e5509f00ad12672e7bd3276df306b68741a6fb9b588c2aee841a75e05db8610e32611c2b565b30604051602001610e469493929190612843565b60405160208183030381529060405280519060200120905060007f8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee8787604051602001610e9593929190612867565b60405160208183030381529060405280519060200120905060008282604051602001610ec2929190612681565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610eff949392919061287f565b6020604051602081039080840390855afa158015610f21573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f545760405162461bcd60e51b81526004016105cd90612e30565b610f5f818a8a611a3b565b505050505050505050565b6002546001600160a01b03163314610f945760405162461bcd60e51b81526004016105cd90612fd1565b600280546001600160a01b0319169055565b600a90565b6002546001600160a01b03163314610fd55760405162461bcd60e51b81526004016105cd90612b81565b600080546040516001600160a01b0390911691633a66f90191839190610fff90879060200161269c565b604051602081830303815290604052856040518563ffffffff1660e01b815260040161102e94939291906126c9565b602060405180830381600087803b15801561104857600080fd5b505af115801561105c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068591906123b9565b60006064600160009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106dc57600080fd5b6002546001600160a01b031633146110fc5760405162461bcd60e51b81526004016105cd906128c4565b6000805460408051630e18b68160e01b815290516001600160a01b0390921692630e18b6819260048084019382900301818387803b15801561113d57600080fd5b505af1158015611151573d6000803e3d6000fd5b50505050565b6000546001600160a01b031681565b60035481565b6000611176611080565b600180546001600160a01b03169063782d6fe1903390611197904390611c03565b6040518363ffffffff1660e01b81526004016111b49291906126b0565b60206040518083038186803b1580156111cc57600080fd5b505afa1580156111e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120491906123b9565b116112215760405162461bcd60e51b81526004016105cd90612dd3565b84518651148015611233575083518651145b8015611240575082518651145b61125c5760405162461bcd60e51b81526004016105cd90612c64565b855161127a5760405162461bcd60e51b81526004016105cd90612d87565b611282610fa6565b865111156112a25760405162461bcd60e51b81526004016105cd90612bf1565b33600090815260056020526040902054801561131f5760006112c3826109b5565b905060018160078111156112d357fe5b14156112f15760405162461bcd60e51b81526004016105cd90612e7f565b60008160078111156112ff57fe5b141561131d5760405162461bcd60e51b81526004016105cd90612afe565b505b600061132d43610b276109b0565b9050600061133d82610b27610527565b6003805460010190559050611350611d8e565b50604080516101a081018252600354808252600060208084018281528486018f8152606086018f9052608086018e905260a086018d905260c0860189905260e0860188905261010086018490526101208601849052336101408701526101608601849052610180860184905293835260048252949091208351815593516001850155905180519293849390926113ed926002850192910190611e03565b5060608201518051611409916003840191602090910190611e68565b5060808201518051611425916004840191602090910190611eaf565b5060a08201518051611441916005840191602090910190611f08565b5060c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a0160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061016082015181600a0160146101000a81548160ff02191690831515021790555061018082015181600a0160156101000a81548160ff0219169083151502179055509050508060000151600560008361014001516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e6040516115559998979695949392919061304c565b60405180910390a1519998505050505050505050565b6004611576826109b5565b600781111561158157fe5b1461159e5760405162461bcd60e51b81526004016105cd90612921565b600081815260046020818152604080842084548251630d48571f60e31b815292519195946115f39442946001600160a01b0390931693636a42b8f8938084019390829003018186803b158015610aef57600080fd5b600283015490915060005b8181101561179d5761179584600201828154811061161857fe5b6000918252602090912001546003860180546001600160a01b03909216918490811061164057fe5b906000526020600020015486600401848154811061165a57fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156116e85780601f106116bd576101008083540402835291602001916116e8565b820191906000526020600020905b8154815290600101906020018083116116cb57829003601f168201915b50505050508760050185815481106116fc57fe5b600091825260209182902001805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561178a5780601f1061175f5761010080835404028352916020019161178a565b820191906000526020600020905b81548152906001019060200180831161176d57829003601f168201915b505050505087611c2f565b6001016115fe565b50600183018290556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda2892906117d790869085906130e4565b60405180910390a150505050565b7f8e25870c07e0b0b3884c78da52790939a455c275406c44ae8b434b692fb916ee81565b611811611f61565b5060008281526004602090815260408083206001600160a01b0385168452600b018252918290208251606081018452815460ff808216151583526101009091041615159281019290925260010154918101919091525b92915050565b6001546001600160a01b031681565b6005611887826109b5565b600781111561189257fe5b146118af5760405162461bcd60e51b81526004016105cd9061298b565b6000818152600460205260408120600a8101805460ff60a81b1916600160a81b179055600281015490915b81811015611a0b576000546003840180546001600160a01b0390921691630825f38f91908490811061190857fe5b906000526020600020015485600201848154811061192257fe5b6000918252602090912001546003870180546001600160a01b03909216918690811061194a57fe5b906000526020600020015487600401868154811061196457fe5b9060005260206000200188600501878154811061197d57fe5b9060005260206000200189600101546040518763ffffffff1660e01b81526004016119ac9594939291906127a9565b6000604051808303818588803b1580156119c557600080fd5b505af11580156119d9573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052611a0291908101906123d1565b506001016118da565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f83604051610d9d919061283a565b6001611a46836109b5565b6007811115611a5157fe5b14611a6e5760405162461bcd60e51b81526004016105cd90612f58565b60008281526004602090815260408083206001600160a01b0387168452600b8101909252909120805460ff1615611ab75760405162461bcd60e51b81526004016105cd90612ab1565b600154600683015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe191611aed918a916004016126b0565b60206040518083038186803b158015611b0557600080fd5b505afa158015611b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3d91906123b9565b90508315611b5d57611b53836008015482611bd7565b6008840155611b71565b611b6b836009015482611bd7565b60098401555b8154600160ff19909116811761ff0019166101008615150217835582018190556040517f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c4690611bc7908890889088908690612735565b60405180910390a1505050505050565b600082820183811015611bfc5760405162461bcd60e51b81526004016105cd90612c39565b9392505050565b600082821115611c255760405162461bcd60e51b81526004016105cd90612fa2565b50900390565b4690565b6000546040516001600160a01b039091169063f2b0653790611c5d908890889088908890889060200161275d565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611c8f919061283a565b60206040518083038186803b158015611ca757600080fd5b505afa158015611cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cdf919061239d565b15611cfc5760405162461bcd60e51b81526004016105cd90612d1d565b600054604051633a66f90160e01b81526001600160a01b0390911690633a66f90190611d34908890889088908890889060040161275d565b602060405180830381600087803b158015611d4e57600080fd5b505af1158015611d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d8691906123b9565b505050505050565b604051806101a001604052806000815260200160008152602001606081526020016060815260200160608152602001606081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016000151581526020016000151581525090565b828054828255906000526020600020908101928215611e58579160200282015b82811115611e5857825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611e23565b50611e64929150611f81565b5090565b828054828255906000526020600020908101928215611ea3579160200282015b82811115611ea3578251825591602001919060010190611e88565b50611e64929150611fa0565b828054828255906000526020600020908101928215611efc579160200282015b82811115611efc5782518051611eec918491602090910190611fb5565b5091602001919060010190611ecf565b50611e64929150612022565b828054828255906000526020600020908101928215611f55579160200282015b82811115611f555782518051611f45918491602090910190611fb5565b5091602001919060010190611f28565b50611e6492915061203f565b604080516060810182526000808252602082018190529181019190915290565b5b80821115611e645780546001600160a01b0319168155600101611f82565b5b80821115611e645760008155600101611fa1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ff657805160ff1916838001178555611ea3565b82800160010185558215611ea35791820182811115611ea3578251825591602001919060010190611e88565b80821115611e64576000612036828261205c565b50600101612022565b80821115611e64576000612053828261205c565b5060010161203f565b50805460018160011615610100020316600290046000825580601f1061208257506120a0565b601f0160209004906000526020600020908101906120a09190611fa0565b50565b80356001600160a01b038116811461186757600080fd5b600082601f8301126120ca578081fd5b81356120dd6120d882613165565b61313e565b8181529150602080830190848101818402860182018710156120fe57600080fd5b60005b848110156121255761211388836120a3565b84529282019290820190600101612101565b505050505092915050565b600082601f830112612140578081fd5b813561214e6120d882613165565b818152915060208083019084810160005b8481101561212557612176888484358a010161223e565b8452928201929082019060010161215f565b600082601f830112612198578081fd5b81356121a66120d882613165565b818152915060208083019084810160005b84811015612125576121ce888484358a010161223e565b845292820192908201906001016121b7565b600082601f8301126121f0578081fd5b81356121fe6120d882613165565b81815291506020808301908481018184028601820187101561221f57600080fd5b60005b8481101561212557813584529282019290820190600101612222565b600082601f83011261224e578081fd5b813561225c6120d882613185565b915080825283602082850101111561227357600080fd5b8060208401602084013760009082016020015292915050565b60006020828403121561229d578081fd5b611bfc83836120a3565b600080604083850312156122b9578081fd5b6122c384846120a3565b946020939093013593505050565b600080600080600060a086880312156122e8578081fd5b853567ffffffffffffffff808211156122ff578283fd5b61230b89838a016120ba565b96506020880135915080821115612320578283fd5b61232c89838a016121e0565b95506040880135915080821115612341578283fd5b61234d89838a01612188565b94506060880135915080821115612362578283fd5b61236e89838a01612130565b93506080880135915080821115612383578283fd5b506123908882890161223e565b9150509295509295909350565b6000602082840312156123ae578081fd5b8151611bfc816131e1565b6000602082840312156123ca578081fd5b5051919050565b6000602082840312156123e2578081fd5b815167ffffffffffffffff8111156123f8578182fd5b8201601f81018413612408578182fd5b80516124166120d882613185565b81815285602083850101111561242a578384fd5b61243b8260208301602086016131b5565b95945050505050565b600060208284031215612455578081fd5b5035919050565b6000806040838503121561246e578182fd5b8235915061247f84602085016120a3565b90509250929050565b6000806040838503121561249a578182fd5b8235915060208301356124ac816131e1565b809150509250929050565b600080600080600060a086880312156124ce578283fd5b8535945060208601356124e0816131e1565b9350604086013560ff811681146124f5578384fd5b94979396509394606081013594506080013592915050565b6000815180845260208085019450808401835b838110156125455781516001600160a01b031687529582019590820190600101612520565b509495945050505050565b6000815180845260208085018081965082840281019150828601855b858110156125965782840389526125848483516125d2565b9885019893509084019060010161256c565b5091979650505050505050565b6000815180845260208085019450808401835b83811015612545578151875295820195908201906001016125b6565b600081518084526125ea8160208601602086016131b5565b601f01601f19169290920160200192915050565b6000815460018082166000811461261c576001811461263a57612678565b60028304607f16865260ff1983166020870152604086019350612678565b6002830480875261264a866131a9565b60005b8281101561266e5781546020828b010152848201915060208101905061264d565b8801602001955050505b50505092915050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b038616825284602083015260a06040830152601860a08301527f73657450656e64696e6741646d696e286164647265737329000000000000000060c083015260e0606083015261272460e08301856125d2565b905082608083015295945050505050565b6001600160a01b03949094168452602084019290925215156040830152606082015260800190565b600060018060a01b038716825285602083015260a0604083015261278460a08301866125d2565b828103606084015261279681866125d2565b9150508260808301529695505050505050565b600060018060a01b038716825285602083015260a060408301526127d060a08301866125fe565b828103606084015261279681866125fe565b6000608082526127f5608083018761250d565b828103602084015261280781876125a3565b9050828103604084015261281b8186612550565b9050828103606084015261282f8185612550565b979650505050505050565b90815260200190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b92835260208301919091521515604082015260600190565b93845260ff9290921660208401526040830152606082015260800190565b60208101600883106128ab57fe5b91905290565b600060208252611bfc60208301846125d2565b60208082526039908201527f476f7665726e6f72416c7068613a3a5f5f61636365707441646d696e3a20736560408201527f6e646572206d75737420626520676f7620677561726469616e00000000000000606082015260800190565b60208082526044908201527f476f7665726e6f72416c7068613a3a71756575653a2070726f706f73616c206360408201527f616e206f6e6c79206265207175657565642069662069742069732073756363656060820152631959195960e21b608082015260a00190565b60208082526045908201527f476f7665726e6f72416c7068613a3a657865637574653a2070726f706f73616c60408201527f2063616e206f6e6c7920626520657865637574656420696620697420697320716060820152641d595d595960da1b608082015260a00190565b6020808252604c908201527f476f7665726e6f72416c7068613a3a5f5f6578656375746553657454696d656c60408201527f6f636b50656e64696e6741646d696e3a2073656e646572206d7573742062652060608201526b33b7bb1033bab0b93234b0b760a11b608082015260a00190565b60208082526029908201527f476f7665726e6f72416c7068613a3a73746174653a20696e76616c69642070726040820152681bdc1bdcd85b081a5960ba1b606082015260800190565b6020808252602d908201527f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f7465722060408201526c185b1c9958591e481d9bdd1959609a1b606082015260800190565b60208082526059908201527f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766560408201527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60608201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000608082015260a00190565b6020808252604a908201527f476f7665726e6f72416c7068613a3a5f5f717565756553657454696d656c6f6360408201527f6b50656e64696e6741646d696e3a2073656e646572206d75737420626520676f6060820152693b1033bab0b93234b0b760b11b608082015260a00190565b60208082526028908201527f476f7665726e6f72416c7068613a3a70726f706f73653a20746f6f206d616e7960408201526720616374696f6e7360c01b606082015260800190565b6020808252601190820152706164646974696f6e206f766572666c6f7760781b604082015260600190565b60208082526044908201527f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73616c60408201527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d6060820152630c2e8c6d60e31b608082015260a00190565b6020808252602f908201527f476f7665726e6f72416c7068613a3a63616e63656c3a2070726f706f7365722060408201526e18589bdd99481d1a1c995cda1bdb19608a1b606082015260800190565b60208082526044908201527f476f7665726e6f72416c7068613a3a5f71756575654f725265766572743a207060408201527f726f706f73616c20616374696f6e20616c7265616479207175657565642061746060820152632065746160e01b608082015260a00190565b6020808252602c908201527f476f7665726e6f72416c7068613a3a70726f706f73653a206d7573742070726f60408201526b7669646520616374696f6e7360a01b606082015260800190565b6020808252603f908201527f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73657260408201527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c6400606082015260800190565b6020808252602f908201527f476f7665726e6f72416c7068613a3a63617374566f746542795369673a20696e60408201526e76616c6964207369676e617475726560881b606082015260800190565b60208082526058908201527f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766560408201527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60608201527f20616c7265616479206163746976652070726f706f73616c0000000000000000608082015260a00190565b60208082526036908201527f476f7665726e6f72416c7068613a3a63616e63656c3a2063616e6e6f742063616040820152751b98d95b08195e1958dd5d1959081c1c9bdc1bdcd85b60521b606082015260800190565b6020808252602a908201527f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f74696e67604082015269081a5cc818db1bdcd95960b21b606082015260800190565b6020808252601590820152747375627472616374696f6e20756e646572666c6f7760581b604082015260600190565b60208082526036908201527f476f7665726e6f72416c7068613a3a5f5f61626469636174653a2073656e6465604082015275391036bab9ba1031329033b7bb1033bab0b93234b0b760511b606082015260800190565b8151151581526020808301511515908201526040918201519181019190915260600190565b8981526001600160a01b0389166020820152610120604082018190526000906130778382018b61250d565b9050828103606084015261308b818a6125a3565b9050828103608084015261309f8189612550565b905082810360a08401526130b38188612550565b90508560c08401528460e08401528281036101008401526130d481856125d2565b9c9b505050505050505050505050565b918252602082015260400190565b988952602089019790975260408801959095526060870193909352608086019190915260a08501526001600160a01b031660c0840152151560e083015215156101008201526101200190565b60405181810167ffffffffffffffff8111828210171561315d57600080fd5b604052919050565b600067ffffffffffffffff82111561317b578081fd5b5060209081020190565b600067ffffffffffffffff82111561319b578081fd5b50601f01601f191660200190565b60009081526020902090565b60005b838110156131d05781810151838201526020016131b8565b838111156111515750506000910152565b80151581146120a057600080fdfea2646970667358221220b228425a5e686d03baf0dfa1d47ac3ae63f350c7388b6076783961ca4163f62564736f6c634300060c0033",
  "devdoc": {
    "events": {
      "ProposalCanceled(uint256)": {
        "details": "An event emitted when a proposal has been canceled"
      },
      "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)": {
        "details": "An event emitted when a new proposal is created"
      },
      "ProposalExecuted(uint256)": {
        "details": "An event emitted when a proposal has been executed in the Timelock"
      },
      "ProposalQueued(uint256,uint256)": {
        "details": "An event emitted when a proposal has been queued in the Timelock"
      },
      "VoteCast(address,uint256,bool,uint256)": {
        "details": "An event emitted when a vote has been cast on a proposal"
      }
    },
    "kind": "dev",
    "methods": {
      "proposalMaxOperations()": {
        "details": "The maximum number of actions that can be included in a proposal"
      },
      "proposalThreshold()": {
        "details": "The number of votes required in order for a voter to become a proposer"
      },
      "quorumVotes()": {
        "details": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
      },
      "votingDelay()": {
        "details": "The delay before voting on a proposal may take place, once proposed"
      },
      "votingPeriod()": {
        "details": "The duration of voting on a proposal, in blocks"
      }
    },
    "stateVariables": {
      "BALLOT_TYPEHASH": {
        "details": "The EIP-712 typehash for the ballot struct used by the contract"
      },
      "DOMAIN_TYPEHASH": {
        "details": "The EIP-712 typehash for the contract's domain"
      },
      "governanceToken": {
        "details": "The address of the Vesper governance token"
      },
      "guardian": {
        "details": "The address of the Governor Guardian"
      },
      "latestProposalIds": {
        "details": "The latest proposal for each proposer"
      },
      "name": {
        "details": "The name of this contract"
      },
      "proposalCount": {
        "details": "The total number of proposals"
      },
      "proposals": {
        "details": "The official record of all proposals ever proposed"
      },
      "timelock": {
        "details": "The address of the Vesper Protocol Timelock"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
        "label": "timelock",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(TimelockInterface)1266"
      },
      {
        "astId": 65,
        "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
        "label": "governanceToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(GovernanceInterface)1281"
      },
      {
        "astId": 68,
        "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
        "label": "guardian",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 71,
        "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
        "label": "proposalCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 127,
        "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
        "label": "proposals",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Proposal)106_storage)"
      },
      {
        "astId": 132,
        "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(GovernanceInterface)1281": {
        "encoding": "inplace",
        "label": "contract GovernanceInterface",
        "numberOfBytes": "20"
      },
      "t_contract(TimelockInterface)1266": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)113_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GovernorAlpha.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)113_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)106_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorAlpha.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)106_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)106_storage": {
        "encoding": "inplace",
        "label": "struct GovernorAlpha.Proposal",
        "members": [
          {
            "astId": 73,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 75,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "eta",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 78,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "targets",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 81,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "values",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 84,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "signatures",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 87,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "calldatas",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 89,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "startBlock",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 91,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "endBlock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 93,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "forVotes",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 95,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "againstVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 97,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "proposer",
            "offset": 0,
            "slot": "10",
            "type": "t_address"
          },
          {
            "astId": 99,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "canceled",
            "offset": 20,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 101,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "executed",
            "offset": 21,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 105,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "receipts",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_address,t_struct(Receipt)113_storage)"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(Receipt)113_storage": {
        "encoding": "inplace",
        "label": "struct GovernorAlpha.Receipt",
        "members": [
          {
            "astId": 108,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 110,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 112,
            "contract": "contracts/governor/GovernorAlpha.sol:GovernorAlpha",
            "label": "votes",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}